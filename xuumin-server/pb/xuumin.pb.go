// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xuumin.proto

/*
Package xuumin is a generated protocol buffer package.

It is generated from these files:
	xuumin.proto

It has these top-level messages:
	AddDiagramRequest
	AddDiagramReply
*/
package xuumin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddDiagramReply_Result int32

const (
	AddDiagramReply_OK AddDiagramReply_Result = 0
	AddDiagramReply_NG AddDiagramReply_Result = 1
)

var AddDiagramReply_Result_name = map[int32]string{
	0: "OK",
	1: "NG",
}
var AddDiagramReply_Result_value = map[string]int32{
	"OK": 0,
	"NG": 1,
}

func (x AddDiagramReply_Result) String() string {
	return proto.EnumName(AddDiagramReply_Result_name, int32(x))
}
func (AddDiagramReply_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type AddDiagramRequest struct {
	Source string `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
}

func (m *AddDiagramRequest) Reset()                    { *m = AddDiagramRequest{} }
func (m *AddDiagramRequest) String() string            { return proto.CompactTextString(m) }
func (*AddDiagramRequest) ProtoMessage()               {}
func (*AddDiagramRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddDiagramRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type AddDiagramReply struct {
	Result  AddDiagramReply_Result `protobuf:"varint,1,opt,name=result,enum=xuumin.AddDiagramReply_Result" json:"result,omitempty"`
	Uuid    string                 `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddDiagramReply) Reset()                    { *m = AddDiagramReply{} }
func (m *AddDiagramReply) String() string            { return proto.CompactTextString(m) }
func (*AddDiagramReply) ProtoMessage()               {}
func (*AddDiagramReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddDiagramReply) GetResult() AddDiagramReply_Result {
	if m != nil {
		return m.Result
	}
	return AddDiagramReply_OK
}

func (m *AddDiagramReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *AddDiagramReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AddDiagramRequest)(nil), "xuumin.AddDiagramRequest")
	proto.RegisterType((*AddDiagramReply)(nil), "xuumin.AddDiagramReply")
	proto.RegisterEnum("xuumin.AddDiagramReply_Result", AddDiagramReply_Result_name, AddDiagramReply_Result_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DiagramService service

type DiagramServiceClient interface {
	AddDiagram(ctx context.Context, in *AddDiagramRequest, opts ...grpc.CallOption) (*AddDiagramReply, error)
}

type diagramServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiagramServiceClient(cc *grpc.ClientConn) DiagramServiceClient {
	return &diagramServiceClient{cc}
}

func (c *diagramServiceClient) AddDiagram(ctx context.Context, in *AddDiagramRequest, opts ...grpc.CallOption) (*AddDiagramReply, error) {
	out := new(AddDiagramReply)
	err := grpc.Invoke(ctx, "/xuumin.DiagramService/AddDiagram", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DiagramService service

type DiagramServiceServer interface {
	AddDiagram(context.Context, *AddDiagramRequest) (*AddDiagramReply, error)
}

func RegisterDiagramServiceServer(s *grpc.Server, srv DiagramServiceServer) {
	s.RegisterService(&_DiagramService_serviceDesc, srv)
}

func _DiagramService_AddDiagram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDiagramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagramServiceServer).AddDiagram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xuumin.DiagramService/AddDiagram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagramServiceServer).AddDiagram(ctx, req.(*AddDiagramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiagramService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xuumin.DiagramService",
	HandlerType: (*DiagramServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDiagram",
			Handler:    _DiagramService_AddDiagram_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xuumin.proto",
}

func init() { proto.RegisterFile("xuumin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xa9, 0x28, 0x2d, 0xcd,
	0xcd, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xb4, 0xb9, 0x04,
	0x1d, 0x53, 0x52, 0x5c, 0x32, 0x13, 0xd3, 0x8b, 0x12, 0x73, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0x8a, 0xf3, 0x4b, 0x8b, 0x92, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0xa0, 0x3c, 0xa5, 0x89, 0x8c, 0x5c, 0xfc, 0xc8, 0xaa, 0x0b, 0x72, 0x2a, 0x85, 0xcc,
	0xb8, 0xd8, 0x8a, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0xc0, 0x6a, 0xf9, 0x8c, 0xe4, 0xf4, 0xa0, 0xf6,
	0xa0, 0x29, 0xd4, 0x0b, 0x02, 0xab, 0x0a, 0x82, 0xaa, 0x16, 0x12, 0xe2, 0x62, 0x29, 0x2d, 0xcd,
	0x4c, 0x91, 0x60, 0x02, 0xdb, 0x00, 0x66, 0x0b, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27,
	0xa6, 0xa7, 0x4a, 0x30, 0x83, 0x85, 0x61, 0x5c, 0x25, 0x09, 0x2e, 0x36, 0x88, 0x7e, 0x21, 0x36,
	0x2e, 0x26, 0x7f, 0x6f, 0x01, 0x06, 0x10, 0xed, 0xe7, 0x2e, 0xc0, 0x68, 0x14, 0xc2, 0xc5, 0x07,
	0xb5, 0x26, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x89, 0x8b, 0x0b, 0x61, 0xb7, 0x90,
	0x24, 0x36, 0xf7, 0x80, 0xbd, 0x29, 0x25, 0x8e, 0xc3, 0xa9, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0x50,
	0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x89, 0x3d, 0xa9, 0xb2, 0x35, 0x01, 0x00, 0x00,
}
